name: Debug Android Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allows manual triggering

jobs:
  debug-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'  # Changed from 21 to 17 for better compatibility
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '11076708'  # Fixed: removed invalid parameters
        packages: 'platform-tools platforms;android-34 build-tools;34.0.0'
        
    - name: Accept Android SDK licenses
      run: |
        echo "📝 Accepting Android SDK licenses..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    - name: Install dependencies
      run: |
        echo "📦 Installing npm dependencies..."
        npm ci
        
    - name: Install Ionic CLI and Capacitor
      run: |
        echo "⚡ Installing Ionic CLI and Capacitor..."
        npm install -g @ionic/cli @capacitor/cli
        
    - name: Build Ionic app
      run: |
        echo "🔨 Building Ionic app..."
        ionic build --prod
        
    - name: Add Android platform
      run: |
        echo "🤖 Adding Android platform..."
        npx cap add android
      continue-on-error: true
        
    - name: Sync Capacitor
      run: |
        echo "🔄 Syncing Capacitor..."
        npx cap sync android
        
    - name: Debug Android project structure
      run: |
        echo "📁 Checking Android project structure..."
        ls -la android/ || echo "Android directory not found"
        if [ -d "android" ]; then
          echo "📋 Android manifest info:"
          cat android/app/src/main/AndroidManifest.xml || echo "Manifest not found"
          echo "🏗️ Gradle files:"
          ls -la android/app/ || echo "App directory not found"
        fi
        
    - name: Create gradle.properties if missing
      run: |
        echo "⚙️ Ensuring gradle.properties exists..."
        if [ ! -f android/gradle.properties ]; then
          echo "Creating gradle.properties..."
          cat > android/gradle.properties << EOF
        android.useAndroidX=true
        android.enableJetifier=true
        org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m
        android.compileSdkVersion=34
        android.targetSdkVersion=34
        android.minSdkVersion=22
        EOF
        else
          echo "gradle.properties already exists:"
          cat android/gradle.properties
        fi
        
    - name: Make gradlew executable
      run: |
        echo "🔧 Making gradlew executable..."
        chmod +x android/gradlew
        
    - name: Clean Android build
      run: |
        echo "🧹 Cleaning Android build..."
        cd android && ./gradlew clean --stacktrace
        
    - name: Build Debug APK
      run: |
        echo "🔍 Building Android Debug APK..."
        cd android && ./gradlew assembleDebug --stacktrace --info
        
    - name: List build outputs
      run: |
        echo "📱 Listing all build outputs..."
        find android -name "*.apk" -type f 2>/dev/null || echo "No APK files found anywhere"
        echo "📊 Build directory structure:"
        ls -la android/app/build/outputs/ 2>/dev/null || echo "Build outputs directory not found"
        
    - name: Environment debug info
      if: failure()
      run: |
        echo "🌍 Environment debug info:"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Ionic version: $(ionic --version)"
        echo "Capacitor version: $(npx cap --version)"
        echo "📱 Android SDK info:"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed 2>/dev/null || echo "Could not list SDK"
        
    - name: Show detailed error logs
      if: failure()
      run: |
        echo "🔍 Checking for detailed error logs..."
        find android -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; 2>/dev/null || echo "No log files found"
        
    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: android-build-logs
        path: |
          android/app/build/outputs/logs/
          android/build/outputs/logs/
          android/gradle.log
        retention-days: 7
        if-no-files-found: ignore
        
    - name: Upload Debug APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: |
          android/app/build/outputs/apk/debug/*.apk
          android/app/build/outputs/apk/**/*.apk
        retention-days: 30
        if-no-files-found: ignore