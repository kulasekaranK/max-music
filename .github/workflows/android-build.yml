name: Debug Android Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Manual trigger

jobs:
  debug-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --------------------------
    # 🔁 Cache Node and Gradle
    # --------------------------
    - name: Cache Node Modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-${{ runner.os }}-

    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}-

    # --------------------------
    # ⚙️ Setup Tools
    # --------------------------
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |
          api-level: 34       # Latest stable APIAdd commentMore actions
          build-tools: 34.0.0



    # --------------------------
    # 📦 Install Dependencies
    # --------------------------
    - name: Install npm dependencies
      run: npm ci

    - name: Install Ionic CLI
      run: npm install -g @ionic/cli

    - name: Ionic build
      run: ionic build --verbose

    - name: Add Android platform (if missing)
      run: npx cap add android || echo "Android already added"

    - name: Sync Capacitor
      run: npx cap sync android

    # --------------------------
    # 🛠️ Build APK
    # --------------------------
    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Clean Android build
      run: cd android && ./gradlew clean

    - name: Build APK (Debug)
      run: cd android && ./gradlew assembleDebug --no-daemon --parallel --stacktrace --info

    # --------------------------
    # 📦 Upload APK
    # --------------------------
    - name: Find APK (debug log)
      run: |
        echo "🔍 Searching for APK..."
        find android/app/build/outputs -name "*.apk"

    - name: Upload APK (if successful)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    # --------------------------
    # 🧪 Debugging On Failure
    # --------------------------
    - name: Show Gradle properties
      if: failure()
      run: |
        echo "📄 gradle.properties:"
        cat android/gradle.properties || echo "File not found"
        echo "🧱 build.gradle (app):"
        cat android/app/build.gradle || echo "File not found"
        echo "🧱 build.gradle (root):"
        cat android/build.gradle || echo "File not found"

    - name: Show Android SDK Info
      if: failure()
      run: |
        echo "📱 Android SDK Info:"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed || true

    - name: Upload logs if build fails
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: android-debug-logs
        path: android/app/build/outputs/
        retention-days: 7
